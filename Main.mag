import "BasisCompute.mag":
    Ker,
    KernelMatrix,
    q2,
    q4,
    ComputeQ2Q4Basis, 
    Psi,
    get_Wq;
str := "";
for weight in [4 .. 100 by 2] do
    m, ker := Ker(weight, pAdicRing(3));
    dim := #ker;
    mod_dim := #Basis(ModularForms(1,weight));
    vals := [Valuation(v) : v in Eltseq(m)];
    if Minimum(vals) lt 0 then
        "Division by 3 occurs at weight " cat IntegerToString(weight);
    end if;
    if dim ne mod_dim then
        "At weight " cat IntegerToString(weight) cat " dims are different!";
        "Kernel dimension: " cat IntegerToString(dim);
        "Modular Form Space Dim " cat IntegerToString(mod_dim);
    end if;
    str := str cat "," cat IntegerToString(dim);
end for;
str;